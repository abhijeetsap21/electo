@model electo.Models.AssignPollingBoothToPollingBoothIncharge

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">              
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Allocate pooling booth to &nbsp;&nbsp;&nbsp;<label>@Model.voterName</label></h4> 
            <div class="modal-body">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PollingBoothID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.PollingBoothID, new SelectList(ViewBag.pollingBoothID_, "pollingBoothID", "pollingBoothName"), "  Polling Booth  ", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PollingBoothID, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.campaignid)
            @Html.HiddenFor(model => model.voluntearID)
            <div class="modal-footer">
                <input  type="button" class="btn btn-default" data-dismiss="modal" value="Close" />
                <input type="submit" class="btn btn-default" name="save" value="Save" />
            </div>
        </div>
    </div>
}


<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script> 