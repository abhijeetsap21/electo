@model electo.Models.surveyQuestionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
}

@{var surveyID = @ViewBag.surveyID;}
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>New Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
       <input type="hidden" name="surveyID" value='@surveyID' />
        <div class="form-group">
            @Html.LabelFor(model => model.questionSerial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.questionSerial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.questionSerial, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.questionTypeID, "questionTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.questionTypeID, new SelectList(ViewBag.questionTypeID, "questionTypeID", "questionType1"), " Question Type ", new { @class = "form-control" , onchange = "getQuestionOptions()"})
                @Html.ValidationMessageFor(model => model.questionTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
            </div>
        </div>
              @*-------- yes/no type---------*@
        <div id="quesType_yesNo" class="row">
                   
                    <div class="form-group">
                        @Html.LabelFor(model => model.questionOP1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.questionOP1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.questionOP1, "", new { @class = "text-danger" })
                        </div>
                    </div>
           
                <div class="form-group">
                    @Html.LabelFor(model => model.questionOP2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.questionOP2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.questionOP2, "", new { @class = "text-danger" })
                    </div>
                </div>
            
     
        </div>


        @*-------- one in multi type---------*@
        <div id="quesType_oneInMulti" class="row" style="display:none">
         
                          
                    <div class="form-group">
                        @Html.LabelFor(model => model.questionOP3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.questionOP3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.questionOP3, "", new { @class = "text-danger" })
                        </div>
                    </div>
              
                    <div class="form-group">
                        @Html.LabelFor(model => model.questionOP4, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.questionOP4, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.questionOP4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                   

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { surveyID = @surveyID })
</div>


<script>
    function getQuestionOptions()
    {
        var questionTypeID = $("#questionTypeID").val();

        if (questionTypeID==1)
        {         
        
            $("#quesType_oneInMulti").css("display", "none");
        }

        if (questionTypeID == 2) {           
            $("#quesType_oneInMulti").css("display", "block");
        }
    }
</script>

<script>

    $(document).ready(function () {
        debugger
        if ('@TempData["Creation"]' != '') {
            if ('@TempData["Creation"]' == "unsuccess")

                bootbox.alert({
                    title: "Alert !",
                    message: '<p>Record not saved</p>',
                    timeOut: 2000
                });
        }
    });
</script>
