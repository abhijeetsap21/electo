@model electo.Models.electionName
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-md-9 box-2 running-campaigns sidebar-right">
        <div class="form-horizontal">
            <h4>New elecion </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.electionName1, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.electionName1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.electionName1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.electionTypeID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.electionTypeID, new SelectList(ViewBag.electionTypeID, "electionTypeID", "electionTypeNAME"), " Election Type ", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.electionTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.monthId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.monthId, new SelectList(ViewBag.monthId, "monthId", "monthName1"), " Month ", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.monthId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.electionYear, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.electionYear, new SelectList(ViewBag.electionYear, "yearID", "Year"), " Year ", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.electionYear, "", new { @class = "text-danger" })
                        <input type="hidden" id="hdnyearName" name="yearName" />
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-12 text-right">
                        @Html.ActionLink("Back to List", "Elections", "", new { @class = "btn btn-default" })
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $("#electionYear").on("change", function () {
        $("#hdnyearName").val($(this).find("option:selected").text());
    });
</script>

<script>

    $(document).ready(function () {
        debugger
        if ('@TempData["Result"]' != '') {
            if ('@TempData["Result"]' == "unsuccess")

                bootbox.alert({
                    title: "Alert !",
                    message: '<p>Record not saved</p>',
                    timeOut: 2000
                });
        }
    });
</script>