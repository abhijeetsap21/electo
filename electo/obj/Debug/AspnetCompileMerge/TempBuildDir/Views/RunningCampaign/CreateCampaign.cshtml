@model electo.Models.campaign

@{
    ViewBag.Title = "CreateCampaign";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("CreateCampaign","RunningCampaign")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>New Campaign</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.campaignName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.campaignName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.campaignName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label>Select State</label>
            @Html.DropDownList("stateID", new SelectList(ViewBag.stateID, "stateID", "stateName"), new { @class = "form-control", onchange = "getConstituencyList()", @id = "stateID" })
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.electionTypeID, "electionTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>Select Election Type @Html.DropDownListFor(model => model.electionTypeID, new SelectList(ViewBag.electionTypeID, "electionTypeID", "electionTypeNAME"), " Election  ", new { @class = "form-control", onchange = "show()", @id = "electiontypeID" })</label>
                @Html.ValidationMessageFor(model => model.electionTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.electionID, "electionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.electionID, new SelectList(ViewBag.electionID, "electionID", "electionName1"), " Election ", new { @class = "form-control", @id = "electionID" })
                @Html.ValidationMessageFor(model => model.electionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="lksc" style="display:none">
            @Html.LabelFor(model => model.lokSabhaConstituencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.lokSabhaConstituencyID, new SelectList(ViewBag.lokSabhaConstituencyID, "lokSabhaConstituencyID", "lokSabhaConstituencyName"), " LockSabha ", new { @class = "form-control", @id = "ddl_LKSC_Constituency" })

                @Html.ValidationMessageFor(model => model.lokSabhaConstituencyID, "", new { @class = "text-danger" })
            </div>
        </div>>

        <div class="form-group" id="vksc" style="display:none">
            @Html.LabelFor(model => model.vidhanSabhaConstituencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.vidhanSabhaConstituencyID, new SelectList(ViewBag.vidhanSabhaConstituencyID, "vidhanSabhaConstituencyID", "vidhanSabhaConstituencyName"), " VidhanSabha ", new { @class = "form-control", @id = "ddl_VKSC_Constituency" })
                @Html.ValidationMessageFor(model => model.vidhanSabhaConstituencyID, "", new { @class = "text-danger" })
            </div>
        </div>                
            

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script src="~/js/FillDistrictByStateID.js"></script>

<script>

    $(document).ready(function () {
        debugger
        if ('@TempData["result"]' != '') {
            if ('@TempData["result"]' == "Success")

                bootbox.alert({
                    title: "Alert !",
                    message: '<p>Campaign Created Successfully</p>',
                    timeOut: 2000
                });
        }
    });
</script>

<script>

    function getConstituencyList() {
        debugger;
        var stateId = $("#stateID").val();
        var districtId = $("#districtID").val();
        var MPCorporation = 0;

        if (stateId == "") {

            bootbox.alert({
                title: "Alert !",
                message: '<p>Please select State</p>',
                timeOut: 2000

            });
            return;

        }

        debugger
        FillLoKSabha(stateId);
        debugger
        FillVidhanSabha(stateId);
        debugger
        //parties(stateId);
    }
    
</script>  

<script>

    function show() {
        debugger;
        var electiontypeID = $("#electiontypeID").val();

        if (electiontypeID == "") {

            bootbox.alert({
                title: "Alert !",
                message: '<p>Please select State</p>',
                timeOut: 2000

            });
            return;

        }

        if(electiontypeID == "1" )
        {
            debugger
            document.getElementById("lksc").style.display = "block";
            document.getElementById("vksc").style.display = "none";
        }
        if (electiontypeID == "2") {
            debugger
            document.getElementById("vksc").style.display = "block";
            document.getElementById("lksc").style.display = "none";
        }

        
    }

</script>  
